 const [isDatePickerVisible, setDatePickerVisibility] = useState(false);

  const showDatePicker = () => {
    setDatePickerVisibility(true);
  };

  const hideDatePicker = () => {
    setDatePickerVisibility(false);
  };

  const handleConfirm = (date) => {
    console.log(date)
    console.warn("A date has been picked: ", date);
    hideDatePicker();
  };



  on Press={async ()=>{
    const res= await patient.post('/create-user',{
       PatientName,email,password,phone,cnic,address,Gender,Date
     })
     console.log(res)
   }}
  let reg = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w\w+)+$/;
  if (reg.test(PatientName) == true)
  {
    setPatientError(' ')
  }
  else
  setPatientError("Enter Correct Email")



<Button title="Show Date Picker" onPress={showDatePicker} />
      <DateTimePickerModal
        isVisible={isDatePickerVisible}
        mode="date"
        onConfirm={handleConfirm}
        onCancel={hideDatePicker}
      />



'use strict';

import React, { Component } from 'react';

import {
  AppRegistry,
  StyleSheet,
  Text,
  TouchableOpacity,
  Linking
} from 'react-native';

import QRCodeScanner from 'react-native-qrcode-scanner';
import { RNCamera } from 'react-native-camera';

class ScanQR extends Component {
  onSuccess = e => {

      var value = e.data;
      <Text>{value}</Text>

      Linking.getInitialURL(value).catch(err =>
      console.error('An error occured', err)
    );
  };

  render() {
    return (
      <QRCodeScanner
        onRead={this.onSuccess}

        // topContent={
        //   <Text style={styles.centerText}>
        //     Go to{' '}
        //     <Text style={styles.textBold}>wikipedia.org/wiki/QR_code</Text> on
        //     your computer and scan the QR code.
        //   </Text>
        // }
        // bottomContent={
        //   <TouchableOpacity style={styles.buttonTouchable}>
        //     <Text style={styles.buttonText}>OK. Got it!</Text>
        //   </TouchableOpacity>
        // }
      />
    );
  }
}

const styles = StyleSheet.create({
  centerText: {
    flex: 1,
    fontSize: 18,
    padding: 32,
    color: '#777'
  },
  textBold: {
    fontWeight: '500',
    color: '#000'
  },
  buttonText: {
    fontSize: 21,
    color: 'rgb(0,122,255)'
  },
  buttonTouchable: {
    padding: 16
  }
});

export default ScanQR;



function Alpha({navigation}){
  return(
    <SafeAreaView>
      <Text>Hello Alpha</Text>
      <Button title='Go to Bete' onPress={()=>{navigation.navigate('Beta')}} />

     
    </SafeAreaView>
  )
}

function Beta(){
  return(
    <SafeAreaView>
      <Text>Hello Alpha</Text>
    </SafeAreaView>
  )
}
const Stack = createNativeStackNavigator();
function HomeScreen({navigation}) {
  const routes=useRoute()
    return (
      <Stack.Navigator screenOptions={{headerShown:false}} >
        <Stack.Screen name="Alpha" component={Alpha} />
        <Stack.Screen name="Beta" component={Beta} />

      </Stack.Navigator>
     
    );
  }